{
    "contestId": 620,
    "index": "F",
    "name": "Xors on Segments",
    "type": "PROGRAMMING",
    "rating": 2800,
    "tags": [
        "data structures",
        "strings",
        "trees"
    ],
    "desc": {
        "title": "F. Xors on Segments",
        "statement": "<p>You are given an array with <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>m</i></span> queries. Each query is described by two integers <span class=\"tex-span\">(<i>l</i><sub class=\"lower-index\"><i>j</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>j</i></sub>)</span>.</p><p>Let's define the function <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/ecb82d0a70bb734cec28b00bf66dd8bff4b132b9.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. The function is defined for only <span class=\"tex-span\"><i>u</i>\u2009\u2264\u2009<i>v</i></span>.</p><p>For each query print the maximal value of the function <span class=\"tex-span\"><i>f</i>(<i>a</i><sub class=\"lower-index\"><i>x</i></sub>,\u2009<i>a</i><sub class=\"lower-index\"><i>y</i></sub>)</span> over all <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>j</i></sub>\u2009\u2264\u2009<i>x</i>,\u2009<i>y</i>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>j</i></sub>,\u2009 <i>a</i><sub class=\"lower-index\"><i>x</i></sub>\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>y</i></sub></span>.</p>",
        "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i>,\u2009<i>m</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20095\u00b710<sup class=\"upper-index\">4</sup>,\u2009 1\u2009\u2264\u2009<i>m</i>\u2009\u2264\u20095\u00b710<sup class=\"upper-index\">3</sup></span>) \u2014 the size of the array and the number of the queries.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">6</sup></span>) \u2014 the elements of the array <span class=\"tex-span\"><i>a</i></span>.</p><p>Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>j</i></sub>,\u2009<i>r</i><sub class=\"lower-index\"><i>j</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i><sub class=\"lower-index\"><i>j</i></sub>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>j</i></sub>\u2009\u2264\u2009<i>n</i></span>) \u2013 the parameters of the <span class=\"tex-span\"><i>j</i></span>-th query.</p>",
        "outputSpecification": "<p>For each query print the value <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>j</i></sub></span> on a separate line \u2014 the maximal value of the function <span class=\"tex-span\"><i>f</i>(<i>a</i><sub class=\"lower-index\"><i>x</i></sub>,\u2009<i>a</i><sub class=\"lower-index\"><i>y</i></sub>)</span> over all <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>j</i></sub>\u2009\u2264\u2009<i>x</i>,\u2009<i>y</i>\u2009\u2264\u2009<i>r</i><sub class=\"lower-index\"><i>j</i></sub>,\u2009 <i>a</i><sub class=\"lower-index\"><i>x</i></sub>\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>y</i></sub></span>.</p>",
        "samples": [
            {
                "input": "6 3<br/>1 2 3 4 5 6<br/>1 6<br/>2 5<br/>3 4<br/>",
                "output": "7<br/>7<br/>7<br/>"
            },
            {
                "input": "1 1<br/>1<br/>1 1<br/>",
                "output": "1<br/>"
            },
            {
                "input": "6 20<br/>10 21312 2314 214 1 322<br/>1 1<br/>1 2<br/>1 3<br/>1 4<br/>1 5<br/>1 6<br/>2 2<br/>2 3<br/>2 4<br/>2 5<br/>2 6<br/>3 4<br/>3 5<br/>3 6<br/>4 4<br/>4 5<br/>4 6<br/>5 5<br/>5 6<br/>6 6<br/>",
                "output": "10<br/>21313<br/>21313<br/>21313<br/>21313<br/>21313<br/>21312<br/>21313<br/>21313<br/>21313<br/>21313<br/>2314<br/>2315<br/>2315<br/>214<br/>215<br/>323<br/>1<br/>323<br/>322<br/>"
            }
        ],
        "note": null
    },
    "suggested_categories": [
        "array manipulation",
        "query processing",
        "mathematical functions",
        "algorithm design",
        "data structures",
        "dynamic programming",
        "optimization problems",
        "range queries",
        "function optimization",
        "combinatorics",
        "problem solving",
        "algorithm optimization",
        "segment tree",
        "array operations",
        "optimal substructure",
        "divide and conquer",
        "mathematical algorithms",
        "algorithmic complexity",
        "performance optimization",
        "programming challenges"
    ]
}