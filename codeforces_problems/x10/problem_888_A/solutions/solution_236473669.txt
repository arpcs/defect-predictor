{
    "id": 236473669,
    "contestId": 888,
    "creationTimeSeconds": 1702112455,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 888,
        "index": "A",
        "name": "Local Extrema",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 888,
        "members": [
            {
                "handle": "YassoKhalid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1510239900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// If you never bleed, you're never gonna grow.\n#include \"bits/stdc++.h\"\n#include \"unordered_set\"\n#include \"unordered_map\"\n#include \"ext/pb_ds/assoc_container.hpp\"\n#include \"ext/pb_ds/tree_policy.hpp\"\n\n#define int long long\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate<typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst int N = 1e7 + 5, mod = 1e9 + 7;\n\nint dx[] = {1, -1, 0, 0, -1, -1, 1, 1};\nint dy[] = {0, 0, 1, -1, -1, 1, 1, -1};\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\n\nint lcm(int a, int b) { return a / gcd(a, b) * b; }\n\nvoid Get_AC() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (auto &i: a)cin >> i;\n    int ans = 0;\n    for (int i = 1; i < n - 1; i++) {\n        ans += (a[i] < a[i - 1] && a[i] > a[i + 1]);\n    }\n    cout << ans;\n}\n\nsigned main() {\n    std::ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#else\n#endif\n    int tc = 1;\n//    cin >> tc;\n    for (int i = 1; i <= tc; i++) {\n//       cout << \"Case \" << i << \": \";\n        Get_AC();\n    }\n    return 0;\n}"
}