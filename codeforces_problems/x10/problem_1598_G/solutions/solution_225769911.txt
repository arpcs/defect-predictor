{
    "id": 225769911,
    "contestId": 1598,
    "creationTimeSeconds": 1695987703,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1598,
        "index": "G",
        "name": "The Sum of Good Numbers",
        "type": "PROGRAMMING",
        "rating": 3200,
        "tags": [
            "hashing",
            "math",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 1598,
        "members": [
            {
                "handle": "nyyjshcz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633856700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 150,
    "timeConsumedMillis": 295,
    "memoryConsumedBytes": 80691200,
    "source": "// LUOGU_RID: 126017904\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst __int128 N=5e5+10;\r\nmt19937 rnd(time(0));\r\nconst __int128 M=1, M1 = 1, M2 = rnd() * rnd() % 10000000000000000ll + 99824485332212254ll;\r\n__int128 n,m,a[N],b[N],hashb,hasha[N],qz[N],len;\r\n__int128 hashb1,hasha1[N],qz1[N];\r\n__int128 hashb2,hasha2[N],qz2[N];\r\nchar c[N];\r\ninline __int128 get(__int128 l,__int128 r)\r\n{\r\n\tif(l>r)return rnd()%M;\r\n\treturn (hasha[r]-hasha[l-1]*qz[r-l+1]%M+M)%M;\r\n}\r\ninline __int128 get1(__int128 l,__int128 r)\r\n{\r\n\tif(l>r)return rnd()%M1;\r\n\treturn (hasha1[r]-hasha1[l-1]*qz1[r-l+1]%M1+M1)%M1;\r\n}\r\ninline __int128 get2(__int128 l,__int128 r)\r\n{\r\n\tif(l>r)return rnd()%M1;\r\n\treturn (hasha2[r]-hasha2[l-1]*qz2[r-l+1]%M2+M2)%M2;\r\n}\r\n__int128 nex[N],nxt[N];\r\ninline void getnex()\r\n{\r\n\tnex[1]=m;\r\n\tfor(__int128 i=2,l=0,r=0; i<=m; i++)\r\n\t{\r\n\t\tif(i<=r)nex[i]=min(nex[i-l+1],r-i+1);\r\n\t\twhile(i+nex[i]<=m&&b[i+nex[i]]==b[nex[i]+1])nex[i]++;\r\n\t\tif(i+nex[i]-1>=r)r=i+nex[i]-1,l=i;\r\n\t}\r\n}\r\ninline void getnxt()\r\n{\r\n\tfor(__int128 i=1,l=0,r=0; i<=n; i++)\r\n\t{\r\n\t\tif(i<=r)nxt[i]=min(nex[i-l+1],r-i+1);\r\n\t\twhile(i+nxt[i]<=n&&a[i+nxt[i]]==b[nxt[i]+1])nxt[i]++;\r\n\t\tif(i+nxt[i]-1>=r)r=i+nxt[i]-1,l=i;\r\n\t}\r\n}\r\nvoid write(__int128 x) {\r\n  if (x < 0) {\r\n    x = -x;\r\n    putchar('-');\r\n  }\r\n  if (x > 9) write(x / 10);\r\n  putchar(x % 10 + '0');\r\n}\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(0);\r\n\tcin>>c+1;\r\n\tn=strlen(c+1);\r\n\tqz1[0]=qz[0]=qz2[0] = 1;\r\n\tfor(__int128 i=1; i<N; i++)qz[i]=((qz[i-1]<<1)+(qz[i-1]<<3))%M,qz1[i]=((qz1[i-1]<<1)+(qz1[i-1]<<3))%M1, qz2[i]=((qz2[i-1]<<1)+(qz2[i-1]<<3))%M2;\r\n\tfor(__int128 i=1; i<=n; i++)a[i]=c[i]-'0',hasha[i]=((hasha[i-1]<<1)+(hasha[i-1]<<3)+a[i])%M,hasha1[i]=((hasha1[i-1]<<1)+(hasha1[i-1]<<3)+a[i])%M1,hasha2[i]=((hasha2[i-1]<<1)+(hasha2[i-1]<<3)+a[i])%M2;\r\n\tcin>>c+1;\r\n\tm=strlen(c+1);\r\n\tfor(__int128 i=1; i<=m; i++)b[i]=c[i]-'0',hashb=((hashb<<1)+(hashb<<3)+b[i])%M,hashb1=((hashb1<<1)+(hashb1<<3)+b[i])%M1, hashb2=((hashb2<<1)+(hashb2<<3)+b[i])%M2;\r\n\tlen=m-1;\r\n\tfor(__int128 i=1; i+len+len-1<=n; i++)\r\n\t{\r\n\t\tif((get(i,i+len-1)+get(i+len,i+len+len-1))%M==hashb&&(get1(i,i+len-1)+get1(i+len,i+len+len-1))%M1==hashb1&&(get2(i,i+len-1)+get2(i+len,i+len+len-1))%M2==hashb2)\r\n\t\t{\r\n\t\t\twrite(i); putchar(' '); write(i + len - 1); putchar('\\n'); write(i + len); putchar(' '); write(i + len + len - 1); putchar('\\n');\r\n\t\t\t//cout<<i<<' '<<i+len-1<<'\\n'<<i+len<<' '<<i+len+len-1<<'\\n';\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tgetnex();\r\n\tgetnxt();\r\n//\tfor(__int128 i=1;i<=n;i++)cout<<a[i]<<' ';\r\n//\tcout<<'\\n';\r\n//\tfor(__int128 i=1;i<=m;i++)cout<<b[i]<<' ';\r\n//\tcout<<'\\n';\r\n//\tfor(__int128 i=1;i<=n;i++)cout<<nxt[i]<<' ';\r\n\tlen=m;\r\n\tfor(__int128 i=1; i+len-1<=n; i++)\r\n\t{\r\n\t\t__int128 j=i+len-1;\r\n\t\t__int128 p=nxt[i];\r\n\t\tp=m-p;\r\n\t\tif(!p)continue;\r\n\t\tif(j+p<=n)\r\n\t\t{\r\n\t\t\tif((get(i,j)+get(j+1,j+p))%M==hashb&&(get1(i,j)+get1(j+1,j+p))%M1==hashb1&&(get2(i,j)+get2(j+1,j+p))%M2==hashb2)\r\n\t\t\t{\r\n\t\t\t\twrite(i); putchar(' '); write(j); putchar('\\n'); write(j + 1); putchar(' '); write(j + p); putchar('\\n');\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(i-p>=1)\r\n\t\t{\r\n\t\t\tif((get(i,j)+get(i-p,i-1))%M==hashb&&(get1(i,j)+get1(i-p,i-1))%M1==hashb1&&(get2(i,j)+get2(i-p,i-1))%M2==hashb2)\r\n\t\t\t{\r\n\t\t\t\twrite(i - p); putchar(' '); write(i - 1); putchar('\\n'); write(i); putchar(' '); write(j); putchar('\\n');\r\n\t\t\t\t//cout<<i-p<<' '<<i-1<<'\\n'<<i<<' '<<j;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tp--;\r\n\t\tif(!p)continue;\r\n\t\tif(j+p<=n)\r\n\t\t{\r\n\t\t\tif((get(i,j)+get(j+1,j+p))%M==hashb&&(get1(i,j)+get1(j+1,j+p))%M1==hashb1&&(get2(i,j)+get2(j+1,j+p))%M2==hashb2)\r\n\t\t\t{\r\n\t\t\t\twrite(i); putchar(' '); write(j); putchar('\\n'); write(j + 1); putchar(' '); write(j + p); putchar('\\n');\r\n\t\t\t\t//cout<<i<<' '<<j<<'\\n'<<j+1<<' '<<j+p;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(i-p>=1)\r\n\t\t{\r\n\t\t\tif((get(i,j)+get(i-p,i-1))%M==hashb&&(get1(i,j)+get1(i-p,i-1))%M1==hashb1&&(get2(i,j)+get2(i-p,i-1))%M2==hashb2)\r\n\t\t\t{\r\n\t\t\t\twrite(i - p); putchar(' '); write(i - 1); putchar('\\n'); write(i); putchar(' '); write(j); putchar('\\n');\r\n\t\t\t\t//cout<<i-p<<' '<<i-1<<'\\n'<<i<<' '<<j;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}