{
    "id": 231662455,
    "contestId": 1702,
    "creationTimeSeconds": 1699327993,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1702,
        "index": "E",
        "name": "Split Into Two Sets",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1702,
        "members": [
            {
                "handle": "arnavsrivastava0123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1657463700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 37785600,
    "source": "#include <bits/stdc++.h>\r\n \r\nusing namespace std;\r\n\r\nbool dfs(int i, vector<bool> &vis, vector<int> &color, vector<vector<int>> &adj){\r\n\tfor(int u: adj[i]){\r\n\t\tif(!vis[u]){\r\n\t\t\tvis[u] = 1;\r\n\t\t\tcolor[u] = !color[i];\r\n\t\t\tif(!dfs(u,vis,color,adj)) return false;\r\n\t\t}else if(color[u] == color[i]){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n \r\nvoid solve(){\r\n   int n; cin >> n;\r\n   // bipartite graph\r\n   vector<vector<int>> adj(n+1);\r\n   vector<bool> vis(n+1);\r\n   vector<int> color(n+1);\r\n   map<int ,int> mp;\r\n   bool works = true;\r\n   for(int i = 0; i < n;i++){\r\n   \t\tint u, v; cin >> u >> v;\r\n   \t\tadj[u].push_back(v);\r\n   \t\tadj[v].push_back(u);\r\n   \t\tmp[u]++;\r\n   \t\tmp[v]++;\r\n   \t\tif(u == v) works = false;\r\n   \t\tif(mp[u] > 2 || mp[v] > 2) works = false;\r\n   }\r\n   for(int i = 1; i <= n;i++){\r\n   \t\tif(vis[i]) continue;\r\n   \t\tcolor[i] = 1;\r\n   \t\tint cnt = 0;\r\n   \t\tif(!dfs(i,vis,color,adj)){\r\n   \t\t\tworks = false;\r\n   \t\t}\r\n   }\r\n   cout << (works?\"YES\\n\":\"NO\\n\");\r\n}\r\n \r\nint main(){\r\nios::sync_with_stdio(false);\r\ncin.tie(0);\r\n \r\n#ifndef ONLINE_JUDGE\r\nfreopen(\"input.txt\",\"r\",stdin);\r\nfreopen(\"output.txt\",\"w\",stdout);\r\n#endif\r\n \r\nint T = 1; cin >> T;\r\nwhile(T--){\r\n  solve();\r\n}\r\n}"
}