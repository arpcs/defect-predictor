{
    "id": 224805820,
    "contestId": 1066,
    "creationTimeSeconds": 1695502916,
    "relativeTimeSeconds": 6716,
    "problem": {
        "contestId": 1066,
        "index": "D",
        "name": "Boxes Packing",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1066,
        "members": [
            {
                "handle": "Bahnasy_"
            },
            {
                "handle": "_SIGMA"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 118190,
        "teamName": "discrete maattt",
        "ghost": false,
        "startTimeSeconds": 1695496200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 31948800,
    "source": "#include<bits/stdc++.h>\r\n#define print(v,T) copy(v.begin(), v.end(), ostream_iterator<T>(cout, \" \"));\r\n#define neymar ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define ll long long\r\n#define el \"\\n\"\r\n#define ell cout<<\"\\n\"\r\n#define forn(i, n) for (int i = 0; i < n; i++)\r\n#define for1(i, n) for (int i = 1; i <= n; i++)\r\n#define forb(i, n) for (int i = n-1; i >= 0; i--)\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n//#include<ext/pb_ds/assoc_container.hpp>\r\n//#include<ext/pb_ds/tree_policy.hpp>\r\n//using namespace __gnu_pbds;\r\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\nusing namespace std;\r\n//#define pair<int, int> pii // pair of (node, weight)\r\nll gcd(ll a, ll b) {\r\n    if (b == 0)return a;\r\n    return gcd(b, a % b);\r\n}\r\nconst ll N = 2e5 + 4;\r\nint dy[] = { 1,-1,0,0 };\r\nint dx[] = { 0,0,-1,1 };\r\n\r\nll nCr(ll n, ll r) {\r\n    ///\r\n    if (r > n) return 0;\r\n    if (r == 0 || n == r) return 1;\r\n    double res = 0;\r\n    for (int i = 0; i < r; i++) {\r\n        res += log(n - i) - log(i + 1);\r\n    }\r\n    return (ll)round(exp(res));\r\n}\r\nll fastp(long double base, ll po) {\r\n    long double ret = 1;\r\n    while (po) {\r\n        if (po % 2)ret = ret * base;\r\n        base = base * base;\r\n        po /= 2;\r\n    }\r\n    //\r\n    return ret;\r\n}\r\npair<ll, ll> quad(ll a, ll b, ll c) {\r\n    ll d = sqrt((b * b) - (4 * a * c));\r\n    //cout << \"LLLL\" << el;\r\n    if (d < 0)return { 0,0 };\r\n    pair<ll, ll> ans;\r\n    ans.first = (b + d) / 2;\r\n    ans.second = (b - d) / 2;\r\n    //cout << ans.first << \" \" << ans.second <<\"KK\"<< el;\r\n    return ans;\r\n}\r\nll n, m, k, aa = 0;\r\nvector<ll>v;\r\nll dp[N][3];\r\nll solve(int idx, int box, ll sum, int st) {\r\n    if (idx == n || st > 2) {\r\n        return 0;\r\n    }\r\n    \r\n    auto& ret = dp[idx][st];\r\n    if (~ret)return ret;\r\n    ret=solve(idx, box, sum, st + 1);\r\n    if (st == 0) {\r\n        ret = max(solve(idx + 1, box, sum, 0), solve(idx + 1, box, sum, 1));\r\n    }\r\n    else if (st == 2) {\r\n        ret = solve(idx + 1, box, sum, 2);\r\n    }\r\n    else if (st == 1) {\r\n        if (sum + v[idx] <= k) {\r\n            ret = max(solve(idx + 1, box, sum + v[idx], 1), solve(idx + 1, box, sum + v[idx], 2)) + 1;\r\n        }\r\n        else {\r\n            if (box < m && k >= v[idx]) {\r\n                ret = max(solve(idx + 1, box + 1, v[idx], 1), solve(idx + 1, box + 1, v[idx], 2)) + 1;\r\n            }\r\n            else ret = 0;\r\n        }\r\n        ret = max({ ret, solve(idx + 1, box, sum, 1), solve(idx + 1, box, sum, 2) });\r\n    }\r\n    return ret;\r\n}\r\nint main() {\r\n    int tc = 1;\r\n    //cin >> tc;\r\n    while (tc--) {\r\n       \r\n        cin >> n >> m >> k;\r\n        v.resize(n);\r\n        forn(i, n)cin >> v[i];\r\n        memset(dp, -1, sizeof dp);\r\n        ll ans = 0;\r\n         solve(0, 1, 0, 0);\r\n       // if (v[0] <= k)ans = max(ans, solve(0, 1, v[0], 1));\r\n        forn(i, N) {\r\n            forn(j, 3)ans = max(ans, dp[i][j]);\r\n        }\r\n        cout << ans ;\r\n        \r\n        \r\n    }\r\n\r\n    return 0;\r\n}"
}