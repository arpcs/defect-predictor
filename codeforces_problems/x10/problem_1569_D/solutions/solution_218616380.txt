{
    "id": 218616380,
    "contestId": 1569,
    "creationTimeSeconds": 1691893298,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "D",
        "name": "Inconvenient Pairs",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "lucassala"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define sws ios_base::sync_with_stdio(false); cout.tie(NULL);cin.tie(NULL);\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define ll long long\r\n#define ld long double\r\n#define vi vector<int>\r\n#define pii pair<int,int>\r\n\r\nusing namespace std;\r\n\r\nbool comp(pair<int,int> a, pair<int,int> b){\r\n    if(a.second <= b.second){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nvoid solve(){\r\n    int n,m,k; cin >> n >> m >> k;\r\n    set<int> linhas,colunas;\r\n    for(int i =0; i < n ;i++){\r\n        int x; cin >> x;\r\n        colunas.insert(x);\r\n    }\r\n    for(int i =0; i < m;i++){\r\n        int x; cin >> x;\r\n        linhas.insert(x);\r\n    }\r\n    linhas.insert(-1); linhas.insert(1000001);\r\n    colunas.insert(-1);colunas.insert(1000001);\r\n    vector<pair<int,int>> pes;\r\n    for(int i =0; i < k; i++){\r\n        int x,y; cin >> x >> y;\r\n        pes.push_back({x,y});\r\n    }\r\n    sort(pes.begin(),pes.end());\r\n    ll ans = 0;\r\n    int total = 0;\r\n    map<int,int> temp;\r\n    for(int i =0; i < k;i++){\r\n        int x = *prev(colunas.upper_bound(pes[i].first));\r\n        if(i > 0){\r\n            if(pes[i-1].first <= x){\r\n                temp.clear();\r\n                total = 0;\r\n            }\r\n        }\r\n        ans += total-temp[pes[i].second];\r\n        temp[pes[i].second]++;\r\n        total++;\r\n    }\r\n    temp.clear();\r\n    total = 0;\r\n    sort(pes.begin(),pes.end(),comp);\r\n    for(int i =0; i < k;i++){\r\n        int x = *prev(linhas.upper_bound(pes[i].second));\r\n        if(i > 0){\r\n            if(pes[i-1].second <= x){\r\n                temp.clear();\r\n                total = 0;\r\n            }\r\n        }\r\n        ans += total-temp[pes[i].first];\r\n        temp[pes[i].first]++;\r\n        total++;\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\n\r\nint main(){sws\r\n    int t; cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"
}