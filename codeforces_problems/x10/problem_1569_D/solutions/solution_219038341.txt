{
    "id": 219038341,
    "contestId": 1569,
    "creationTimeSeconds": 1692150763,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "D",
        "name": "Inconvenient Pairs",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "ZhengYuXiang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 16998400,
    "source": "// LUOGU_RID: 121132620\n#include <bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\n\r\nconst int N = 3e5 + 10, V = 1e6 + 10;\r\nint T, n, m, k;\r\nint px[N], py[N];\r\nint tr[V][3];\r\nmap<int, int> X, Y;\r\n\r\nstruct node {\r\n\tint x, y;\r\n} a[N];\r\nstack<node> xx, yy;\r\n\r\nvoid add(int x, int v, int id) {\r\n\t#define lowbit(x) (x & -x)\r\n\tfor (; x <= 1000005; x += lowbit(x)) tr[x][id] += v;\r\n}\r\n\r\nint query(int x, int id) {\r\n\tint res = 0;\r\n\tfor (; x; x -= lowbit(x)) res += tr[x][id];\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--) {\r\n\t\tX.clear();\r\n\t\tY.clear();\r\n\t\tscanf(\"%d%d%d\", &n, &m, &k);\r\n\t\tfor (int i = 1; i <= n; i++) {\r\n\t\t\tscanf(\"%d\", &px[i]);\r\n\t\t\tpx[i]++;\r\n\t\t\tX[px[i]] = i;\r\n\t\t}\r\n\t\tfor (int i = 1; i <= m; i++) {\r\n\t\t\tscanf(\"%d\", &py[i]);\r\n\t\t\tpy[i]++;\r\n\t\t\tY[py[i]] = i;\r\n\t\t}\r\n\t\tll ans = 0;\r\n\t\tfor (int i = 1; i <= k; i++) {\r\n\t\t\tscanf(\"%d%d\", &a[i].x, &a[i].y);\r\n\t\t\ta[i].x++, a[i].y++;\r\n\t\t\tif (X[a[i].x] && Y[a[i].y]) continue;\r\n\t\t\tif (X[a[i].x]) {\r\n\t\t\t\tif (xx.size() && a[i].x != xx.top().x)\r\n\t\t\t\t\twhile (xx.size()) {\r\n\t\t\t\t\t\tadd(xx.top().y, 1, 0);\r\n\t\t\t\t\t\txx.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\tint t = lower_bound(py + 1, py + m + 1, a[i].y) - py;\r\n\t\t\t\tans += query(py[t] - 1, 0) - query(py[t - 1], 0);\r\n//\t\t\t\tcout << query(py[t] - 1, 0) << \"--\" << query(py[t - 1], 0) << endl;\r\n\t\t\t\txx.push(a[i]);\r\n\t\t\t} else {\r\n\t\t\t\tif (yy.size() && a[i].y != yy.top().y)\r\n\t\t\t\t\twhile (yy.size()) {\r\n\t\t\t\t\t\tadd(yy.top().x, 1, 1);\r\n\t\t\t\t\t\tyy.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\tint t = lower_bound(px + 1, px + n + 1, a[i].x) - px;\r\n\t\t\t\tans += query(px[t] - 1, 1) - query(px[t - 1], 1);\r\n//\t\t\t\tcout << px[t] - 1 << \" \" << px[t - 1] << endl;\r\n//\t\t\t\tcout << query(px[t] - 1, 1) << \"---\" << query(px[t - 1], 1) << endl;\r\n\t\t\t\tyy.push(a[i]);\r\n\t\t\t}\r\n//\t\t\tcout << \"===\" << ans << endl;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\", ans);\r\n\t\twhile (xx.size()) {\r\n\t\t\t\t\tadd(xx.top().y, 1, 0);\r\n\t\t\t\t\txx.pop();\r\n\t\t\t\t}\r\n\t\twhile (yy.size()) {\r\n\t\t\t\t\t\tadd(yy.top().x, 1, 1);\r\n\t\t\t\t\t\tyy.pop();\r\n\t\t\t\t\t}\r\n\t\tfor (int i = 1; i <= k; i++) {\r\n\t\t\tif (X[a[i].x] && Y[a[i].y]) continue;\r\n\t\t\tif (X[a[i].x]) add(a[i].y, -1, 0);\r\n\t\t\telse add(a[i].x, -1, 1);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}