{
    "id": 219036682,
    "contestId": 1569,
    "creationTimeSeconds": 1692149398,
    "relativeTimeSeconds": 4798,
    "problem": {
        "contestId": 1569,
        "index": "D",
        "name": "Inconvenient Pairs",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "Sukwants"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1692144600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 6348800,
    "source": "#include <cstdio>\r\n#include <utility>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 2e5, MAXK = 3e5;\r\n\r\nint T, n, m, k, w, r;\r\nint x[MAXN + 5], y[MAXN + 5];\r\npair<int, int> a[MAXK + 5], b[MAXK + 5];\r\n\r\nint main()\r\n{\r\n    scanf(\"%d\", &T);\r\n\r\n    while (T--)\r\n    {\r\n        scanf(\"%d%d%d\", &n, &m, &k);\r\n        for (int i = 1; i <= n; i++) scanf(\"%d\", &x[i]);\r\n        for (int j = 1; j <= m; j++) scanf(\"%d\", &y[j]);\r\n        w = 0, r = 0;\r\n        for (int p = 1; p <= k; p++)\r\n        {\r\n            static int x, y;\r\n            scanf(\"%d%d\", &x, &y);\r\n            auto in = [](int *a, int n, int x) {\r\n                int id = lower_bound(a + 1, a + n + 1, x) - a;\r\n                if (id > n) return false;\r\n                return a[id] == x;\r\n            };\r\n            bool inx = in(::x, n, x), iny = in(::y, m, y);\r\n            if (inx && !iny) a[++w] = make_pair(y, x);\r\n            if (!inx && iny) b[++r] = make_pair(x, y);\r\n        }\r\n\r\n        sort(a, a + w + 1);\r\n        sort(b, b + r + 1);\r\n\r\n        long long Ans = 0;\r\n        for (int j = 2; j <= m; j++)\r\n        {\r\n            if (y[j] - y[j - 1] > 1)\r\n            {\r\n                int r = upper_bound(a + 1, a + w + 1, make_pair(y[j] - 1, int(1e6))) - a, l = lower_bound(a + 1, a + w + 1, make_pair(y[j - 1] + 1, 0)) - a;\r\n                int c = r - l + 1;\r\n                for (int k = l, st = l; k < r; k++)\r\n                {\r\n                    if (a[k].first != a[st].first)\r\n                    {\r\n                        c -= (k - st);\r\n                        Ans = Ans + 1ll * (k - st) * c;\r\n                        st = k;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            if (x[i] - x[i - 1] > 1)\r\n            {\r\n                int r = upper_bound(b + 1, b + r + 1, make_pair(x[i] - 1, int(1e6))) - b, l = lower_bound(b + 1, b + r + 1, make_pair(x[i - 1] + 1, 0)) - b;\r\n                int c = r - l + 1;\r\n                for (int k = l, st = l; k < r; k++)\r\n                {\r\n                    if (b[k].first != b[st].first)\r\n                    {\r\n                        c -= (k - st);\r\n                        Ans = Ans + 1ll * (k - st) * c;\r\n                        st = k;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        printf(\"%lld\\n\", Ans);\r\n    }\r\n\r\n    return 0;\r\n}"
}