{
    "id": 232423774,
    "contestId": 1569,
    "creationTimeSeconds": 1699727598,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "D",
        "name": "Inconvenient Pairs",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "Mispertion"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 24678400,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n#define int ll\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\n\r\n#define pb push_back\r\n#define all(x) x.begin(), x.end()\r\n#define sz(x) (int)x.size()\r\n#define mispertion ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0)\r\n#define F first\r\n#define S second\r\n#define getlast(s) (*s.rbegin())\r\n#define debg cout << \"OK\\n\"\r\n\r\nconst ld PI = 3.1415926535;\r\nconst int N = 2e5 + 1;\r\nconst int M = 9e4 + 1;\r\nint mod = 998244353;\r\nconst int infi = INT_MAX;\r\nconst ll infl = LLONG_MAX;\r\n\r\nint mult(int a, int b) {\r\n    return a * 1LL * b % mod;\r\n}\r\n\r\nint sum(int a, int b) { \r\n    if (a + b < 0)\r\n        return a + b + mod;\r\n    if (a + b >= mod)\r\n        return a + b - mod;\r\n    return a + b;\r\n}\r\n\r\nll binpow(ll a, ll n) {\r\n    if (n == 0)\r\n        return 1;\r\n    if (n % 2 == 1) {\r\n        return binpow(a, n - 1) * a % mod;\r\n    } else {\r\n        ll b = binpow(a, n / 2);\r\n        return b * b % mod;\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n    vector<int> ver(n);\r\n    vector<int> hor(m);\r\n    vector<pii> vh, hh;\r\n    vector<pii> alh(k), vhh;\r\n    for(int i = 0; i < n; i++)\r\n        cin >> ver[i];\r\n    for(int i = 0; i < m; i++)\r\n        cin >> hor[i];\r\n    int ans = 0;\r\n    for(int i = 0; i < k; i++){\r\n        int x, y;\r\n        cin >> x >> y;\r\n        alh[i] = {x, y};\r\n        bool v = ((*lower_bound(all(ver), x)) == x);\r\n        bool h = ((*lower_bound(all(hor), y)) == y);\r\n        if(v && h){\r\n            ans += i;\r\n            vhh.pb({x, y});\r\n        }else if(v){\r\n            ans += (sz(hh) + sz(vhh));\r\n            vh.pb({y, x});\r\n        }else {\r\n            ans += (sz(vh) + sz(vhh));\r\n            hh.pb({x, y});\r\n        }\r\n    }\r\n    ans *= 2;\r\n    sort(all(vh));\r\n    sort(all(hh));\r\n    for(int i = 1; i < m; i++){\r\n        int l = hor[i - 1], r = hor[i];\r\n        int lll, rrr;\r\n        int lo = -1, hi = sz(vh);\r\n        while(lo + 1 < hi){\r\n            int m = (lo + hi) / 2;\r\n            if(vh[m].F < l)\r\n                lo = m;\r\n            else\r\n                hi = m;\r\n        }\r\n        lll = hi;\r\n        int ret = -(lo + 1);\r\n        lo = -1, hi = sz(vh);\r\n        while(lo + 1 < hi){\r\n            int m = (lo + hi) / 2;\r\n            if(vh[m].F < r)\r\n                lo = m;\r\n            else\r\n                hi = m;\r\n        }\r\n        rrr = lo;\r\n        map<int, int> was;\r\n        for(int j = lll; j <= rrr; j++){\r\n            ans += 2 * was[vh[j].S];\r\n            was[vh[j].S]++;\r\n        }\r\n        ret += (lo + 1);\r\n        int higher = (sz(vh) - (lo + 1));\r\n        ans += (ret * higher * 2);\r\n    }\r\n    for(int i = 1; i < n; i++){\r\n        int l = ver[i - 1], r = ver[i];\r\n        int lll, rrr;\r\n        int lo = -1, hi = sz(hh);\r\n        while(lo + 1 < hi){\r\n            int m = (lo + hi) / 2;\r\n            if(hh[m].F < l)\r\n                lo = m;\r\n            else\r\n                hi = m;\r\n        } \r\n        int ret = -(lo + 1);\r\n        lll = hi;\r\n        lo = -1, hi = sz(hh);\r\n        while(lo + 1 < hi){\r\n            int m = (lo + hi) / 2;\r\n            if(hh[m].F < r)\r\n                lo = m;\r\n            else\r\n                hi = m;\r\n        }\r\n        rrr = lo;\r\n        map<int, int> was;\r\n        for(int j = lll; j <= rrr; j++){\r\n            ans += 2 * was[hh[j].S];\r\n            was[hh[j].S]++;\r\n        }\r\n        ret += (lo + 1);\r\n        int higher = (sz(hh) - (lo + 1));\r\n        ans += (ret * higher * 2);\r\n    }\r\n    cout << ((k * (k - 1)) - ans) / 2 << '\\n';\r\n}\r\n\r\n\r\nsigned main() {\r\n    mispertion;\r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}