{
    "id": 213241939,
    "contestId": 1322,
    "creationTimeSeconds": 1689062554,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1322,
        "index": "E",
        "name": "Median Mountain Range",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 1322,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583573700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 810,
    "memoryConsumedBytes": 21606400,
    "source": "#include<cstdio>\nint min(int a,int b){return a<b?a:b;}\nint max(int a,int b){return a>b?a:b;}\nint med(int a,int b,int c){return a+b+c-min(a,min(b,c))-max(a,max(b,c));}\nint n,a[500001],b[500001],w;\nint mx1[1100001],mi1[1100001],mx2[1100001],mi2[1100001];\n#define def(id,v0,calc) int find##id(int x,int y)\\\n{\\\n    int ans=v0;\\\n    for(x+=w-1,y+=w+1;x^y^1;x>>=1,y>>=1)\\\n    {\\\n        if(~x&1)ans=calc(ans,id[x^1]);\\\n        if(y&1)ans=calc(ans,id[y^1]);\\\n    }\\\n    return ans;\\\n}\ndef(mi1,0x3fffffff,min)\ndef(mx1,0,max)\ndef(mi2,0x3fffffff,min)\ndef(mx2,0,max)\nbool check(int x,int v)\n{\n    if(x-v<1||x+v>n)return 0;\n    if(a[x]==med(a[x-1],a[x],a[x+1]))return !v;\n    if(a[x]>a[x-1])\n    {\n        int mi=x&1?findmi1(x-v,x+v):findmi2(x-v,x+v);\n        int mx=x&1?findmx2(x-v,x+v):findmx1(x-v,x+v);\n        return mx<mi;\n    }\n    else\n    {\n        int mi=x&1?findmi2(x-v,x+v):findmi1(x-v,x+v);\n        int mx=x&1?findmx1(x-v,x+v):findmx2(x-v,x+v);\n        return mx<mi;\n    }\n}\nint ask(int x,int v)\n{\n    if(a[x]==med(a[x-1],a[x],a[x+1]))return a[x];\n    if((a[x]>a[x-1])^(v&1))\n    {\n        return (x-v)&1?findmi1(x-v,x+v):findmi2(x-v,x+v);\n    }\n    else\n    {\n        return (x-v)&1?findmx1(x-v,x+v):findmx2(x-v,x+v);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    w=1<<32-__builtin_clz(n+1);\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i&1)\n        {\n            mx1[i+w]=mi1[i+w]=a[i];\n            mi2[i+w]=0x3fffffff;\n        }\n        else\n        {\n            mx2[i+w]=mi2[i+w]=a[i];\n            mi1[i+w]=0x3fffffff;\n        }\n    }\n    for(int i=w-1;i;--i)\n    {\n        mi1[i]=min(mi1[i<<1],mi1[i<<1|1]);\n        mx1[i]=max(mx1[i<<1],mx1[i<<1|1]);\n        mi2[i]=min(mi2[i<<1],mi2[i<<1|1]);\n        mx2[i]=max(mx2[i<<1],mx2[i<<1|1]);\n    }\n    int ans=0,lst=0;\n    for(int i=2;i<n;++i)\n    {\n        if(check(i,lst+1))++lst;\n        else if(!check(i,lst))--lst;\n        if(lst>ans)ans=lst;\n        b[i]=ask(i,lst);\n    }\n    printf(\"%d\\n%d\",ans,a[1]);\n    for(int i=2;i<n;++i)printf(\" %d\",b[i]);\n    printf(\" %d\",a[n]);\n}\n\n \t \t\t \t\t  \t\t \t   \t \t\t \t \t\t\t\t \t"
}