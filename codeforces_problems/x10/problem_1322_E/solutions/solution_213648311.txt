{
    "id": 213648311,
    "contestId": 1322,
    "creationTimeSeconds": 1689250896,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1322,
        "index": "E",
        "name": "Median Mountain Range",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 1322,
        "members": [
            {
                "handle": "lichenghan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583573700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 1918,
    "memoryConsumedBytes": 56934400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=5e5+100;\r\n#ifdef AT_NFLS\r\nint typ;\r\n#endif\r\nint n;\r\nint a[N],lsh[N];\r\nstruct segt{\r\n\t//rng chkmax, all query;\r\n\tint t[N<<2];\r\n\tvoid c(int tl,int tr,int x,int l=1,int r=n,int p=1){\r\n\t\tif(l==tl&&r==tr){\r\n\t\t\tt[p]=max(t[p],x);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tif(tr<=mid){\r\n\t\t\tc(tl,tr,x,l,mid,p<<1);\r\n\t\t}else if(tl>mid){\r\n\t\t\tc(tl,tr,x,mid+1,r,p<<1|1);\r\n\t\t}else{\r\n\t\t\tc(tl,mid,x,l,mid,p<<1);\r\n\t\t\tc(mid+1,tr,x,mid+1,r,p<<1|1);\r\n\t\t}\r\n\t}\r\n\tvoid q(int l,int r,int p,int x){\r\n\t\tx=max(x,t[p]);\r\n\t\tif(l==r){\r\n\t\t\tif(l==1){\r\n\t\t\t\tprintf(\"%d \",lsh[a[1]]);\r\n\t\t\t}else if(l==n){\r\n\t\t\t\tprintf(\"%d \",lsh[a[n]]);\r\n\t\t\t}else{\r\n\t\t\t\tprintf(\"%d \",lsh[x]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tq(l,mid,p<<1,x);\r\n\t\tq(mid+1,r,p<<1|1,x);\r\n\t}\r\n};\r\nsegt t;\r\nset<pair<int,int> > s;\r\nvoid init(){\r\n\tfor(int i=1;i<=n;i++){\r\n\t\ts.insert({i,i});\r\n\t}\r\n}\r\npair<int,int> qinc(int x){\r\n\tauto it=s.lower_bound({x+1,0});\r\n\tit--;\r\n\treturn *it;\r\n}\r\nvector<int> ra[N];\r\nint cur[N];\r\nint ans;\r\nvoid make(int l,int r,int x){\r\n//\tprintf(\"make %d %d %d\\n\",l,r,x);\r\n\tint mid=(l+r)>>1;\r\n\tif(l!=r){\r\n\t\tif(cur[l]) t.c(l,mid,x);\r\n\t\tif(cur[r]) t.c(mid+1,r,x);\r\n\t}else{\r\n\t\tif(cur[l]) t.c(l,l,x);\r\n\t}\r\n\ts.insert({l,r});\r\n}\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tlsh[i]=a[i];\r\n\t}\r\n\tif(n==1){\r\n\t\tprintf(\"%d\\n\",a[1]);\r\n\t\treturn 0;\r\n\t}\r\n\tsort(lsh+1,lsh+n+1);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\ta[i]=lower_bound(lsh+1,lsh+n+1,a[i])-lsh;\r\n\t\tra[a[i]].push_back(i);\r\n\t}\r\n\tinit();\r\n\tfor(int i=n;i>=1;i--){\r\n\t\tfor(int j:ra[i]){\r\n\t\t\t// 0 -> 1\r\n\t\t\tauto [l,r]=qinc(j);\r\n\t\t\ts.erase({l,r});\r\n\t\t\tcur[j]=1;\r\n\t\t\tif(j==l&&j==r&&j>1&&j<n&&cur[j]!=cur[j-1]&&cur[j]!=cur[j+1]){\r\n\t\t\t\tauto [l1,r1]=qinc(j-1);\r\n\t\t\t\tauto [l2,r2]=qinc(j+1);\r\n\t\t\t\ts.erase({l1,r1});\r\n\t\t\t\ts.erase({l2,r2});\r\n\t\t\t\tmake(l1,r2,i);\r\n\t\t\t}else if(j==l&&j>1&&cur[j]!=cur[j-1]){\r\n\t\t\t\tauto [l1,r1]=qinc(j-1);\r\n\t\t\t\ts.erase({l1,r1});\r\n\t\t\t\tmake(l1,j,i);\r\n\t\t\t}else if(j==r&&j<n&&cur[j]!=cur[j+1]){\r\n\t\t\t\tauto [l2,r2]=qinc(j+1);\r\n\t\t\t\ts.erase({l2,r2});\r\n\t\t\t\tmake(j,r2,i);\r\n\t\t\t}\r\n\t\t\tif(j>l){\r\n\t\t\t\tmake(l,j-1,i);\r\n\t\t\t}\r\n\t\t\tif(j<r){\r\n\t\t\t\tmake(j+1,r,i);\r\n\t\t\t}\r\n\t\t\tif(j>l&&j<r){\r\n\t\t\t\tmake(j,j,i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int j:ra[i]) for(int k:{j-1,j,j+1}) if(k>0&&k<=n){\r\n\t\t\tauto [l,r]=qinc(k);\r\n//\t\t\tprintf(\"%d %d\\n\",l,r);\r\n\t\t\tans=max(ans,(r-l)/2);\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n\tt.q(1,n,1,1);\r\n}\r\n"
}