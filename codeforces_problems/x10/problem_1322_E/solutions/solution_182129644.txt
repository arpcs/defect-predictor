{
    "id": 182129644,
    "contestId": 1322,
    "creationTimeSeconds": 1669122779,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1322,
        "index": "E",
        "name": "Median Mountain Range",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 1322,
        "members": [
            {
                "handle": "TLE_Automaton"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583573700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 146,
    "timeConsumedMillis": 1684,
    "memoryConsumedBytes": 38809600,
    "source": "// LUOGU_RID: 95080275\n/*\r\n    Author : TLE_Automaton && hhdxgd && JRXGD && hwd-gd\r\n    Right Output ! & Accepted !\r\n*/\r\n#include <bits/stdc++.h>\r\n//#define int long long\r\nusing namespace std;\r\n\r\nint T;\r\nconst int L = 5e5 + 5;\r\nint t, n, k, x, y, z, ans, cnt, an[L];\r\nbool a[L];\r\n\r\ninline int read() {\r\n\tint x = 0, f = 1;\r\n\tchar ch = getchar();\r\n\twhile (!isdigit(ch))\r\n\t\tf = (ch == '-' ? -1 : f), ch = getchar();\r\n\twhile (isdigit(ch))\r\n\t\tx = (x << 3) + (x << 1) + (ch - '0'), ch = getchar();\r\n\treturn x * f;\r\n}\r\n\r\nstruct node {\r\n\tint x,i;\r\n} p[L];\r\nset<int> pos,ta;\r\n\r\nbool cmp(node a, node b) {\r\n\treturn a.x < b.x;\r\n}\r\n\r\nvoid calc(int l, int r, int v) {\r\n\tauto it = ta.lower_bound(l);\r\n\twhile(it != ta.end() && *it <= r) an[*it] = v, it = ta.erase(it);\r\n}\r\n\r\nvoid update(int k, int v) {\r\n\tint right = *pos.lower_bound(k);\r\n\tint left = *(--pos.lower_bound(k)) + 1;\r\n\tans=max((right-left)/2,ans);\r\n\t\r\n\tint mid = (left + right) >> 1;\r\n\r\n\tif(a[left]) calc(left, mid, v);\r\n\tif(a[right]) calc(mid + 1, right, v);\r\n}\r\n\r\nvoid remake(int i) {\r\n\tif(i > 1 && !a[i - 1]) pos.erase(i - 1); else pos.insert(i - 1);\r\n\tif(i < n && !a[i + 1]) pos.erase(i); else pos.insert(i);\r\n}\r\n\r\nsigned main() {\r\n\tn = read();\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\tp[i].x = read();\r\n\t\tp[i].i = i;\r\n\t}\r\n\tsort(p + 1, p + 1 + n, cmp);\r\n\tpos.insert(0);\r\n\tfor(int i = 1; i <= n; i ++) pos.insert(i),ta.insert(i);\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\ta[p[i].i] = 1;\r\n\t\tremake(p[i].i);\r\n\t\tif(p[i+1].x!=p[i].x){\r\n\t\t\tint k = i;\r\n\t\t\twhile(p[k].x==p[k-1].x){\r\n\t\t\t\tfor(int delta=-1;delta<=1;delta++) update(p[k].i + delta, p[k].x);\r\n\t\t\t\tk--;\r\n\t\t\t}\r\n\t\t\tfor(int delta=-1;delta<=1;delta++) update(p[k].i + delta, p[k].x);\r\n\t\t}\r\n\t}\r\n\tcout<<ans<<endl;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tcout<<an[i]<<\" \";\r\n\t}\r\n\treturn 0;\r\n}"
}