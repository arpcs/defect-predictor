{
    "id": 213736603,
    "contestId": 1322,
    "creationTimeSeconds": 1689319463,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1322,
        "index": "E",
        "name": "Median Mountain Range",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 1322,
        "members": [
            {
                "handle": "sprads"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583573700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 146,
    "timeConsumedMillis": 1840,
    "memoryConsumedBytes": 52428800,
    "source": "// LUOGU_RID: 115464774\n#include<bits/stdc++.h>\r\ntypedef long long ll;\r\nusing namespace std;\r\nconst int N = 500005;\r\nset<int> un,s;\r\nvector<int> p[N];\r\nint t,n,a[N],m,b[N],ans,h[N];\r\nint rd(){\r\n    int x = 0,f = 0;char ch = getchar();\r\n    while(ch < '0' || ch > '9')f |= ch == '-',ch = getchar();\r\n    while(ch >= '0' && ch <= '9')x = x * 10 + ch - '0',ch = getchar();\r\n    return !f ? x : -x;\r\n}\r\nbool chk(int x,int v){\r\n    return a[x - 1] == v || a[x + 1] == v;\r\n}\r\nvoid upd(int x,int v){\r\n    if(x == 1 || x == n)return;\r\n    if(!chk(x,v) && s.count(x))\r\n        s.erase(x);\r\n    else if(chk(x,v) && !s.count(x))\r\n        s.insert(x);\r\n}\r\nvoid del(int l,int r,int v){\r\n    auto lt = un.lower_bound(l);\r\n    while(lt != un.end() && *lt <= r){\r\n        h[*lt] = v,lt = un.erase(lt);\r\n    }\r\n}\r\nvoid add(int L,int R,int v){\r\n    ans = max(ans,(R - L) / 2);\r\n    if(a[L] != a[R]){\r\n        if(a[L] == 1)del(L,(L + R) / 2,v);\r\n        else del((L + R) / 2 + 1,R,v);\r\n    }\r\n    else{\r\n        if(a[L] == 1)\r\n            del(L,R,v);\r\n    }\r\n}\r\nvoid deal(int x,int v){\r\n    if(!s.count(x)){\r\n        auto it = s.lower_bound(x);\r\n        add(*prev(it),*it,v);\r\n    }\r\n    else{\r\n        auto it = s.find(x);\r\n        if(it != s.begin())add(*prev(it),*it,v);\r\n        if((++it) != s.end())add(*prev(it),*it,v);\r\n    }\r\n}\r\nint main(){\r\n    n = rd();\r\n    for(int i = 1;i <= n;i++){\r\n        a[i] = rd();\r\n        b[++m] = a[i];\r\n    }\r\n    sort(b + 1,b + 1 + m);\r\n    m = unique(b + 1,b + 1 + m) - b - 1;\r\n    for(int i = 1;i <= n;i++){\r\n        h[i] = a[i],a[i] = 2;\r\n        un.insert(i),s.insert(i);\r\n        p[lower_bound(b + 1,b + 1 + m,h[i]) - b].push_back(i);\r\n    }\r\n    for(int i = 1;i <= m;i++){\r\n        for(int j : p[i])a[j] = 1;\r\n        for(int j : p[i]){\r\n            upd(j,1);\r\n            if(j > 1)upd(j - 1,a[j - 1]);\r\n            if(j < n)upd(j + 1,a[j + 1]);\r\n        }\r\n        for(int j : p[i]){\r\n            if(j > 1)deal(j - 1,b[i]);\r\n            if(j < n)deal(j + 1,b[i]);\r\n        }\r\n    }\r\n    printf(\"%d\\n\",ans);\r\n    for(int i = 1;i <= n;i++)\r\n        printf(\"%d \",h[i]);\r\n    return 0;\r\n}\r\n/*\r\n1 8\r\n11 5 15 6 18 18 9 20\r\n2 1 2 2 2 2 2 2\r\n2 1 2 1 2 2 2 2\r\n2 1 2 1 2 2 1 2\r\n1 1 2 1 2 2 1 2\r\n11 11 6 15 18 18 18 20\r\n11 11 11 15 18 18 18 20\r\n*/"
}