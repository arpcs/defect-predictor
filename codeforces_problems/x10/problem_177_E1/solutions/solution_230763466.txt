{
    "id": 230763466,
    "contestId": 177,
    "creationTimeSeconds": 1698813155,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 177,
        "index": "E1",
        "name": "Space Voyage",
        "type": "PROGRAMMING",
        "points": 30.0,
        "rating": 1700,
        "tags": [
            "binary search"
        ]
    },
    "author": {
        "contestId": 177,
        "members": [
            {
                "handle": "1v7w"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335016800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS1",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 307200,
    "source": "#include <cstdio>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <string>\r\n#include <cstring>\r\n#include <cmath>\r\n\r\n#define fi first\r\n#define se second\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing pii = pair<int, int>;\r\n\r\nconst double eps = 1e-4;\r\nconst int N = 10010;\r\n__int128 n, a[N], b[N], c;\r\n\r\ninline __int128 read(){\r\n    __int128 x = 0, f = 1;\r\n    char ch = getchar();\r\n    while(ch < '0' || ch > '9'){\r\n        if(ch == '-')\r\n            f = -1;\r\n        ch = getchar();\r\n    }\r\n    while(ch >= '0' && ch <= '9'){\r\n        x = x * 10 + ch - '0';\r\n        ch = getchar();\r\n    }\r\n    return x * f;\r\n}\r\n\r\ninline void print(__int128 x){\r\n    if(x < 0){\r\n        putchar('-');\r\n        x = -x;\r\n    }\r\n    if(x > 9)\r\n        print(x / 10);\r\n    putchar(x % 10 + '0');\r\n}\r\n\r\nbool check_le(__int128 x) {\r\n    __int128 res = n;\r\n    for (int i=1; i<=n; i++) {\r\n        res += a[i] * x / b[i];\r\n    }\r\n    return res <= c;\r\n}\r\n\r\nbool check_ge(__int128 x) {\r\n    __int128 res = n;\r\n    for (int i=1; i<=n; i++) {\r\n        res += a[i] * x / b[i];\r\n    }\r\n    return res >= c;\r\n}\r\n\r\nbool check(__int128 x) {\r\n    __int128 res = n;\r\n    for (int i=1; i<=n; i++) {\r\n        res += a[i] * x / b[i];\r\n    }\r\n    return res == c;\r\n}\r\n\r\nvoid solve() {\r\n    // scanf(\"%lld%lld\", &n, &c);\r\n    n = read(); c = read();\r\n    __int128 maxv_a = 0;\r\n    \r\n    for (int i=1; i<=n; i++) {\r\n        // scanf(\"%lld%lld\", &a[i], &b[i]);\r\n        a[i] = read(); b[i] = read();\r\n        maxv_a = max(maxv_a, a[i]);\r\n    }\r\n    if (maxv_a == 0) {\r\n        puts(\"-1\");\r\n        return;\r\n    }\r\n    __int128 res_l, res_r;\r\n    // r\r\n    __int128 l = 0, r = 1e18;\r\n    while (l < r) {\r\n        __int128 mid = (l + r + 1) >> 1;\r\n        if (check_le(mid)) l = mid;\r\n        else r = mid - 1;\r\n    }\r\n    res_r = l;\r\n    // l\r\n    l = 0, r = 1e18;\r\n    while (l < r) {\r\n        __int128 mid = (l + r) >> 1;\r\n        if (check_ge(mid)) r = mid;\r\n        else l = mid + 1;\r\n    }\r\n    res_l = l;\r\n    if (n == 100) {\r\n        print(res_l); putchar(' '); print(res_r); putchar('\\n');\r\n    }\r\n    // printf(\"max_a=%lld minb=%lld res_l=%lld res_r=%lld\\n\", maxv_a, minv_b, res_l, res_r);\r\n    if(check(l)) {\r\n        // printf(\"%lld\\n\", res_r - res_l + 1);\r\n        print(res_r - res_l + 1);\r\n        puts(\"\");\r\n    }\r\n    else puts(\"0\");\r\n}\r\n\r\nint main() {\r\n    // multiple case\r\n    // int t; scanf(\"%d\", &t);\r\n    // while(t--) {\r\n    //     solve();\r\n    // }\r\n\r\n    // single case\r\n    solve();\r\n\r\n    return 0;\r\n}"
}