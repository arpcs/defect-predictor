{
    "id": 235986811,
    "contestId": 1903,
    "creationTimeSeconds": 1701829018,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1903,
        "index": "D2",
        "name": "Maximum And Queries (hard version)",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "dp",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1903,
        "members": [
            {
                "handle": "luogu_bot2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1701362100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 6457,
    "memoryConsumedBytes": 323584000,
    "source": "// LUOGU_RID: 138387950\n#pragma GCC optimize(3)\r\n#pragma GCC target(\"avx\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"inline\")\r\n#pragma GCC optimize(\"-fgcse\")\r\n#pragma GCC optimize(\"-fgcse-lm\")\r\n#pragma GCC optimize(\"-fipa-sra\")\r\n#pragma GCC optimize(\"-ftree-pre\")\r\n#pragma GCC optimize(\"-ftree-vrp\")\r\n#pragma GCC optimize(\"-fpeephole2\")\r\n#pragma GCC optimize(\"-ffast-math\")\r\n#pragma GCC optimize(\"-fsched-spec\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC optimize(\"-falign-jumps\")\r\n#pragma GCC optimize(\"-falign-loops\")\r\n#pragma GCC optimize(\"-falign-labels\")\r\n#pragma GCC optimize(\"-fdevirtualize\")\r\n#pragma GCC optimize(\"-fcaller-saves\")\r\n#pragma GCC optimize(\"-fcrossjumping\")\r\n#pragma GCC optimize(\"-fthread-jumps\")\r\n#pragma GCC optimize(\"-funroll-loops\")\r\n#pragma GCC optimize(\"-fwhole-program\")\r\n#pragma GCC optimize(\"-freorder-blocks\")\r\n#pragma GCC optimize(\"-fschedule-insns\")\r\n#pragma GCC optimize(\"inline-functions\")\r\n#pragma GCC optimize(\"-ftree-tail-merge\")\r\n#pragma GCC optimize(\"-fschedule-insns2\")\r\n#pragma GCC optimize(\"-fstrict-aliasing\")\r\n#pragma GCC optimize(\"-fstrict-overflow\")\r\n#pragma GCC optimize(\"-falign-functions\")\r\n#pragma GCC optimize(\"-fcse-skip-blocks\")\r\n#pragma GCC optimize(\"-fcse-follow-jumps\")\r\n#pragma GCC optimize(\"-fsched-interblock\")\r\n#pragma GCC optimize(\"-fpartial-inlining\")\r\n#pragma GCC optimize(\"no-stack-protector\")\r\n#pragma GCC optimize(\"-freorder-functions\")\r\n#pragma GCC optimize(\"-findirect-inlining\")\r\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n#pragma GCC optimize(\"inline-small-functions\")\r\n#pragma GCC optimize(\"-finline-small-functions\")\r\n#pragma GCC optimize(\"-ftree-switch-conversion\")\r\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n#pragma GCC optimize(\"-fexpensive-optimizations\")\r\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\r\n#pragma GCC optimize(\"inline-functions-called-once\")\r\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nconst int N = 1 << 20;\r\nint n,q,cnt[25][N + 5];\r\nll k,a[N + 5],sum[25][N + 5],Sum,Mx;\r\nll lg(ll x)\r\n{\r\n\tif(!x)return -1;\r\n\treturn 63 ^ __builtin_clzll(x);\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d %d\",&n,&q);\r\n\tfor(int i = 1;i <= n;i++)\r\n\t{\r\n\t\tscanf(\"%lld\",&a[i]);\r\n\t\tMx = max(Mx,a[i]);\r\n\t\tfor(int j = 0;j <= 19;j++)\r\n\t\t\tif(!(a[i] & (1 << j)))\r\n\t\t\t\tsum[j][a[i]] += a[i] & ((1 << j) - 1),cnt[j][a[i]]++;\r\n\t\tSum += a[i];\r\n\t}\r\n\tfor(int k = 0;k <= 19;k++)\r\n\t\tfor(int j = 19;~j;j--)\r\n\t\t\tfor(int i = 1;i <= Mx;i++)\r\n\t\t\t\tif((i & (1 << j))&&cnt[k][i])\r\n\t\t\t\t\tsum[k][i ^ (1 << j)] += sum[k][i],\r\n\t\t\t\t\tcnt[k][i ^ (1 << j)] += cnt[k][i];\r\n\twhile(q--)\r\n\t{\r\n\t\tscanf(\"%lld\",&k);\r\n\t\tll ans = 0;\r\n\t\tif(lg((k + Sum) / n) >= 20)\r\n\t\t{\r\n\t\t\tans = 1ll << lg((k + Sum) / n);\r\n\t\t\tk += Sum - ans * n;\r\n\t\t\tcout<<ans + (k / n)<<endl;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tint Cnt = 0;\r\n\t\tfor(int i = 19;~i;i--)\r\n\t\t{\r\n\t\t\tll p = 1ll << i;\r\n\t\t\tll nowcnt = cnt[i][ans];\r\n\t\t\tll nowsum = sum[i][ans];\r\n\t\t\tif(k >= (Cnt + nowcnt) * p - nowsum)\r\n\t\t\t\tCnt += nowcnt,ans += p,k -= Cnt * p - nowsum;\r\n\t\t}\r\n\t\tcout<<ans<<endl;\r\n\t}\r\n}",
    "suggested_categories": [
        "algorithm",
        "optimization",
        "bit manipulation",
        "performance tuning",
        "numerical analysis",
        "data processing",
        "mathematical computation",
        "code optimization",
        "c++ programming",
        "programming techniques",
        "high performance computing",
        "efficient coding",
        "software efficiency",
        "compiler directives",
        "code profiling",
        "c++ optimization",
        "programming best practices",
        "debugging techniques",
        "efficient algorithms",
        "low-level programming"
    ]
}