{
    "id": 215171274,
    "contestId": 735,
    "creationTimeSeconds": 1690113592,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 735,
        "index": "E",
        "name": "Ostap and Tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 735,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1480264500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 101;\n\nint n, k;\nint dp[N][44], temp[44];\nvector<int> g[N];\n\nconst int mod = 1e9 + 7;\n\nvoid cal(int u, int fa)\n{\n    dp[u][0] = dp[u][k + 1] = 1;\n    for(auto v : g[u])\n    {\n        if(v == fa) continue;\n\n        cal(v, u);\n        memset(temp, 0, sizeof temp);\n        for(int i = 0; i <= 2 * k; i ++)\n        {\n            for(int j = 0; j <= 2 * k; j ++)\n            {\n                if(i + j <= 2 * k)\n                // i \u662f u \u7684 \u5b50\u6811\u5185\u79bbu\u6700\u8fd1\u7684\u70b9\n                // j \u662f u \u7684 \u513f\u5b50 v \u7684\u5b50\u6811\u5185\u79bbv\u6700\u8fd1\u7684\u70b9\n                    temp[min(i, j + 1)] = (temp[min(i, j + 1)] + dp[u][i] * dp[v][j]) % mod;\n                else\n                    temp[max(i, j + 1)] = (temp[max(i, j + 1)] + dp[u][i] * dp[v][j]) % mod;\n            }\n        }\n        swap(temp, dp[u]);\n    }\n}\n\nint main()\n{\n    cin >> n >> k;\n    for(int i = 1; i < n; i++)\n    {\n        int u, v;\n        cin >> u >> v;\n        g[u].emplace_back(v);\n        g[v].emplace_back(u);\n    }\n\n    cal(1, 0);\n\n    long long ans = 0;\n\n    for(int i = 0; i <= k; i ++)\n    {\n        ans = (ans + dp[1][i]) % mod;\n    }\n    cout << ans << endl;\n    return 0;\n}\n    \t  \t \t  \t \t  \t\t\t\t\t  \t\t"
}