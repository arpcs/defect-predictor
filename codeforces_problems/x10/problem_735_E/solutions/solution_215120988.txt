{
    "id": 215120988,
    "contestId": 735,
    "creationTimeSeconds": 1690082937,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 735,
        "index": "E",
        "name": "Ostap and Tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 735,
        "members": [
            {
                "handle": "Belmaxii"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1480264500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4915200,
    "source": "// Problem: E. Ostap and Tree\r\n// Contest: Codeforces - Codeforces Round 382 (Div. 2)\r\n// URL: https://codeforces.com/problemset/problem/735/E\r\n// Memory Limit: 256 MB\r\n// Time Limit: 2000 ms\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define remake return\r\n#define fastio do{ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);}while(0)\r\n#define mp make_pair\r\n#define pb push_back\r\n#define pii pair<int,int>\r\n#define udm unordered_map<int,int>\r\ntypedef complex<double> cp;\r\n#define int long long\r\n#define rd(x) scanf(\"%lld\",&x)\r\n#define FOR(i,x,y) for(auto i=(x);i<=(y);i++)\r\n#define ROF(i,x,y) for(auto i=(x);i>=(y);i--)\r\n#define mem(x) memset(&x,0,sizeof x)\r\n#define INF (1ll<<62)\r\n#define endl '\\n'\r\n\r\n\r\nconst int N = 2e5+5;\r\nconst int MOD = 1e9+7;\r\nconst double PI = acos(-1.0);\r\n\r\nvoid pre(){\r\n\treturn;\r\n}\r\nstruct Edge{\r\n\tint to;\r\n\tint next;\r\n}edge[N];\r\nint n,k;\r\nint head[N];\r\nint dp[101][50];\r\nint cnt;\r\nvoid add(int u,int v){\r\n\tedge[++cnt].to = v;\r\n\tedge[cnt].next = head[u];\r\n\thead[u] = cnt;\r\n}\r\nint dfs(int x,int fa){\r\n\tdp[x][0]=1;\r\n\tdp[x][k+1]=1;\r\n\tfor(int u=head[x];u;u=edge[u].next){\r\n\t\tint to = edge[u].to;\r\n\t\tif(to==fa) continue;\r\n\t\tdfs(to,x);\r\n\t\tint t[30];\r\n\t\tmem(t);\r\n\t\tfor(int i=0;i<=2*k;i++){\r\n\t\t\tfor(int j=0;j<=2*k;j++){\r\n\t\t\t\tif(i+j<=2*k) t[min(i,j+1)]+=(dp[x][i]*dp[to][j]%MOD)%MOD;\r\n\t\t\t\telse t[max(i,j+1)]+=(dp[x][i]*dp[to][j]%MOD)%MOD;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=0;i<=2*k;i++) dp[x][i] = t[i];\r\n\t}\r\n\t\r\n}\r\nvoid solve(){\r\n\trd(n);rd(k);\r\n\tfor(int i=1;i<n;i++){\r\n\t\tint a,b;\r\n\t\trd(a);rd(b);\r\n\t\tadd(a,b);\r\n\t\tadd(b,a);\r\n\t}\r\n\tdfs(1,0);\r\n\tint ans=0;\r\n\tFOR(i,0,k) ans+=dp[1][i],ans%=MOD;\r\n\tcout<<ans;\r\n\treturn;\r\n}\r\nsigned main(){\r\n\tpre();\r\n\tint T=1;\r\n\t// rd(T);\r\n\twhile(T--){\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}